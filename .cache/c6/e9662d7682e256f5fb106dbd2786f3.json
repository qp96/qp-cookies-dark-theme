{"id":"node_modules/rfc-csv/csv.js","dependencies":[{"name":"E:\\FE Study\\Amr Saad Tutorial\\JS Projects by Amr Saad\\JS workshop 1day\\package.json","includedInParent":true,"mtime":1638462194535},{"name":"E:\\FE Study\\Amr Saad Tutorial\\JS Projects by Amr Saad\\JS workshop 1day\\node_modules\\rfc-csv\\package.json","includedInParent":true,"mtime":1638462191825},{"name":"util","loc":{"line":2,"column":19},"parent":"E:\\FE Study\\Amr Saad Tutorial\\JS Projects by Amr Saad\\JS workshop 1day\\node_modules\\rfc-csv\\csv.js","resolved":"E:\\FE Study\\Amr Saad Tutorial\\JS Projects by Amr Saad\\JS workshop 1day\\node_modules\\util\\util.js"},{"name":"stream","loc":{"line":3,"column":21},"parent":"E:\\FE Study\\Amr Saad Tutorial\\JS Projects by Amr Saad\\JS workshop 1day\\node_modules\\rfc-csv\\csv.js","resolved":"E:\\FE Study\\Amr Saad Tutorial\\JS Projects by Amr Saad\\JS workshop 1day\\node_modules\\stream-browserify\\index.js"}],"generated":{"js":"\nvar util = require('util');\nvar stream = require('stream');\n\nvar DOUBLE_DQOUTE = /\"\"/g;\n\nfunction CSV(hasHeader) {\n  if (!(this instanceof CSV)) return new CSV(hasHeader);\n\n  stream.Transform.call(this, {\n    objectMode: true\n  });\n\n  this._hasHeader = !!hasHeader;\n  \n  this._dataWriten = false;\n  this._currentRow = [];\n  this._currentCell = '';\n\n  this._flagEscaped = false;\n  this._flagQoute = false;\n  this._flagNewCell = true;\n}\nmodule.exports = CSV;\nutil.inherits(CSV, stream.Transform);\n\nCSV.prototype._transform = function (chunk, encodeing, done) {\n  this._dataWriten = true;\n\n  chunk = chunk.toString();\n  \n  var start = 0;\n\n  for (var i = 0, l = chunk.length; i < l; i++) {\n    var sign = chunk.charCodeAt(i);\n    \n    // Detect if next cell is an escaped cell\n    if (this._flagNewCell) {\n      this._flagNewCell = false;\n\n      // if `\"` then its an escaped cell\n      if (sign === 34) {\n        this._flagEscaped = true;\n        continue;\n      }\n    }\n\n    // Manage dqoute in escaped cell\n    if (this._flagEscaped) {\n      if (sign === 34) {\n        this._flagQoute = !this._flagQoute;\n        continue;\n      }\n    }\n\n    // In an escaped cell the termination must be after a `\"`\n    // In an unescaped cell the termination can happen at any point\n    if ((this._flagEscaped && this._flagQoute) || !this._flagEscaped) {\n      switch (sign) {\n        case 44: //,\n          this._doneCell(this._currentCell + chunk.slice(start, i));\n          start = i + 1;\n          break;\n        case 10: // \\n\n          this._doneCell((this._currentCell + chunk.slice(start, i)).slice(0, -1));\n          start = i + 1;\n          this._doneRow();\n          break;\n      }\n    }\n  }\n  \n  // Chunk parsing done store the current cell\n  this._currentCell += chunk.slice(start, i);\n\n  done(null);\n};\n\nCSV.prototype._doneCell = function (cell) {\n  // If its an escaped cell then remove the sounding qoutes and replace \"\" with \"\n  if (this._flagEscaped) {\n    cell = cell.slice(1, -1).replace(DOUBLE_DQOUTE, '\"');\n  }\n\n  // Add cell to row and reset cell flags\n  this._currentRow.push(cell);\n  this._currentCell = '';\n  this._flagEscaped = false;\n  this._flagQoute = false;\n  this._flagNewCell = true;\n};\n\nCSV.prototype._doneRow = function () {\n  // If headers are requested emit the header event\n  if (this._hasHeader === true) {\n    this._hasHeader = false;\n    this.emit('header', this._currentRow);\n  }\n  // Otherwice just push the data array\n  else {\n    this.push(this._currentRow);\n  }\n\n  this._currentRow = [];\n};\n\n// End of stream, the current row is done\nCSV.prototype._flush = function (done) {\n  if (this._dataWriten) {\n    this._doneCell(this._currentCell);\n    this._doneRow();\n  }\n  done(null);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/rfc-csv/csv.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/rfc-csv/csv.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}}],"sources":{"node_modules/rfc-csv/csv.js":"\nvar util = require('util');\nvar stream = require('stream');\n\nvar DOUBLE_DQOUTE = /\"\"/g;\n\nfunction CSV(hasHeader) {\n  if (!(this instanceof CSV)) return new CSV(hasHeader);\n\n  stream.Transform.call(this, {\n    objectMode: true\n  });\n\n  this._hasHeader = !!hasHeader;\n  \n  this._dataWriten = false;\n  this._currentRow = [];\n  this._currentCell = '';\n\n  this._flagEscaped = false;\n  this._flagQoute = false;\n  this._flagNewCell = true;\n}\nmodule.exports = CSV;\nutil.inherits(CSV, stream.Transform);\n\nCSV.prototype._transform = function (chunk, encodeing, done) {\n  this._dataWriten = true;\n\n  chunk = chunk.toString();\n  \n  var start = 0;\n\n  for (var i = 0, l = chunk.length; i < l; i++) {\n    var sign = chunk.charCodeAt(i);\n    \n    // Detect if next cell is an escaped cell\n    if (this._flagNewCell) {\n      this._flagNewCell = false;\n\n      // if `\"` then its an escaped cell\n      if (sign === 34) {\n        this._flagEscaped = true;\n        continue;\n      }\n    }\n\n    // Manage dqoute in escaped cell\n    if (this._flagEscaped) {\n      if (sign === 34) {\n        this._flagQoute = !this._flagQoute;\n        continue;\n      }\n    }\n\n    // In an escaped cell the termination must be after a `\"`\n    // In an unescaped cell the termination can happen at any point\n    if ((this._flagEscaped && this._flagQoute) || !this._flagEscaped) {\n      switch (sign) {\n        case 44: //,\n          this._doneCell(this._currentCell + chunk.slice(start, i));\n          start = i + 1;\n          break;\n        case 10: // \\n\n          this._doneCell((this._currentCell + chunk.slice(start, i)).slice(0, -1));\n          start = i + 1;\n          this._doneRow();\n          break;\n      }\n    }\n  }\n  \n  // Chunk parsing done store the current cell\n  this._currentCell += chunk.slice(start, i);\n\n  done(null);\n};\n\nCSV.prototype._doneCell = function (cell) {\n  // If its an escaped cell then remove the sounding qoutes and replace \"\" with \"\n  if (this._flagEscaped) {\n    cell = cell.slice(1, -1).replace(DOUBLE_DQOUTE, '\"');\n  }\n\n  // Add cell to row and reset cell flags\n  this._currentRow.push(cell);\n  this._currentCell = '';\n  this._flagEscaped = false;\n  this._flagQoute = false;\n  this._flagNewCell = true;\n};\n\nCSV.prototype._doneRow = function () {\n  // If headers are requested emit the header event\n  if (this._hasHeader === true) {\n    this._hasHeader = false;\n    this.emit('header', this._currentRow);\n  }\n  // Otherwice just push the data array\n  else {\n    this.push(this._currentRow);\n  }\n\n  this._currentRow = [];\n};\n\n// End of stream, the current row is done\nCSV.prototype._flush = function (done) {\n  if (this._dataWriten) {\n    this._doneCell(this._currentCell);\n    this._doneRow();\n  }\n  done(null);\n};\n"},"lineCount":115}},"error":null,"hash":"678c2ce8390904358d1d35857b410d02","cacheData":{"env":{}}}